{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","unshift","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACO,sBAAMC,SAXQ,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAEzBR,GAAc,SAACS,GAA6B,OAAtBA,EAAEC,QAAQR,GAAmB,YAAIO,MACvDN,EAAc,MAKf,SACK,uBACQQ,KAAM,OACNC,MAAOV,EACPW,SAnBM,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbC,EAHa,0DAG4CC,UAAUH,GAHtD,sDAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKEA,EAAUC,OALZ,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAI,SAACC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHuB,SAACA,GAExB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGlB,CAACpB,IAEIqB,EDduBI,CAAazB,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACC,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAC/CoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAIaH,EAAOJ,KAAI,SAACiB,GAAD,OACP,cAAC,EAAD,eAAgCA,GAAdA,EAAMf,aEbvCgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGF,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MClB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.349e9906.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n\r\n            setCategories((c) => {c.unshift(inputValue);return [...c];});\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n           <form onSubmit={handleSubmit}>\r\n                <input\r\n                        type= \"text\"\r\n                        value={inputValue}\r\n                        onChange={handleInputChange}\r\n                />\r\n           </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=EaDoKrKxysJ2iU2lY2363oWKBU0Beky9`\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    \r\n    \r\n    const gifs = data.map((img) =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n  \r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn '>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react' \r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n         <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n           <div className='card-grid'>\r\n            \r\n\r\n                    {\r\n                        images.map((image) => (\r\n                            <GifGridItem key={image.id} {...image}/>\r\n                            ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs= (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(img =>{\r\n            setstate({\r\n                data:img,\r\n                loading:false\r\n            });\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     //setCategories((c) => {c.push('one piece');return c;});\r\n    //     setCategories((c) => {c.push('one piece');return [...c];});\r\n    // }\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2> \r\n          <AddCategory setCategories = {setCategories}/>\r\n          <hr/> \r\n          \r\n\r\n        <ol>\r\n            {\r\n                categories.map(category =>(\r\n                    <GifGrid \r\n                        category={category}\r\n                        key={category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}